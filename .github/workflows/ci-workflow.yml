name: Build, test and package esque
on:
  push:
    branches:
      - 61-installation-and-packaging
  pull_request:
    branches:
      - 61-installation-and-packaging

jobs:
  test-style:
    name: Code style check on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.x', '3.6', '3.7', 'pypy3' ]
        os: ['ubuntu-latest']
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 61-installation-and-packaging
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - uses: bulv1ne/python-style-check@master
  test-integration:
    name: Integration test with Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.x', '3.6', '3.7', 'pypy3' ]
      max-parallel: 1
    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:5.0.0
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_URL: "localhost:2181"
          HOST: "localhost"
          ZOOKEEPER_CLIENT_PORT: "2181"
      kafka:
        image: confluentinc/cp-kafka:5.0.0
        ports:
          - 9092:9092
        env:
          KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
          KAFKA_LISTENERS: 'PLAINTEXT://localhost:9092'
          KAFKA_BROKER_ID: '1'
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
          KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      schemaregistry:
        image: confluentinc/cp-schema-registry:5.0.0
        ports:
          - 8081:8081
        env:
          SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: none
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "localhost:2181"
          SCHEMA_REGISTRY_HOST_NAME: localhost
          SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 61-installation-and-packaging
      - name: Waiting for services
        run: |
          bash -c "./scripts/wait-for-it.sh ${ZOOKEEPER_URL} -t 60" ;
          bash -c "./scripts/wait-for-it.sh ${BROKER_URL} -t 60" ;
          bash -c "./scripts/wait-for-it.sh ${SCHEMA_REGISTRY_URL} -t 60" ;
        env:
          ZOOKEEPER_URL: localhost:2181
          BROKER_URL: localhost:9092
          SCHEMA_REGISTRY_URL: localhost:8081
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "False"
      - name: Install system packages
        run: sudo apt-get install -y python3-setuptools python3-virtualenv python3-pip virtualenv python3-venv
      - name: Install and configure poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python3
          export PATH=$PATH:$HOME/.poetry/bin
          source $HOME/.poetry/env
          virtualenv venv --python=python3
          $HOME/.poetry/bin/poetry self:update --preview
      - name: Install esque requirements
        run: |
          source ./venv/bin/activate
          $HOME/.poetry/bin/poetry install -vvv
      - name: Setup default esque configuration
        run: |
          mkdir -p ~/.esque
          source ./venv/bin/activate
          cp ./esque/config/sample_config.yaml ~/.esque/esque.yaml
      - name: Run unit tests
        run: |
          source ./venv/bin/activate
          $HOME/.poetry/bin/poetry run pytest tests/unit/
      - name: Run integration tests
        run: |
          source ./venv/bin/activate
          esque ctx local
          $HOME/.poetry/bin/poetry run pytest --integration --local tests/integration/commands/test_ping.py
#  publish-to-pypi:
#    name: Publish to pypi
#    needs: [test-style, test-integration]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Install required packages
#        run: |
#          sudo pip3 install pep517
#          python3 -m pep517.build --source --binary --out-dir dist/
#        shell: bash
#      # secrets must be set up on GitHub
#      #- name: Publish esque to PyPI
#      #  uses: pypa/gh-action-pypi-publish@master
#      #  with:
#      #    password: ${{ secrets.pypi_password }}
