name: Build, test and package esque
on:
  push:
    branches:
      - 61-installation-and-packaging
  pull_request:
    branches:
      - 61-installation-and-packaging

jobs:
  test-style:
    name: Code style check on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.6']
        os: ['ubuntu-latest']
    steps:
      - uses: actions/checkout@v1
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Install required packages
        run: |
          sudo apt-get install -y python3-setuptools python3-virtualenv python3-pip virtualenv python3-venv
          pip3 install pre-commit
      - name: Install pre-commit hooks
        run: pre-commit install --install-hooks
      - name: Run pre-commit hooks
        run: pre-commit run
  test-integration:
    name: Integration test with Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.6', '3.7', '3.8', 'pypy3' ]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v1
      - name: Setup python and install packages
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Install required packages
        run: |
          sudo apt-get install -y python3-setuptools python3-virtualenv python3-pip virtualenv python3-venv
          pip3 install pre-commit
      - name: Install and configure poetry
        run: |
          pip3 install "poetry==1.0.0b3"
      - name: Install esque requirements
        run: |
          poetry install -vvv
      - name: Run unit tests
        run: |
          poetry run -- pytest tests/unit/
      - name: Run kafka stack
        run: |
          docker-compose up -d
          ./scripts/wait-for-it.sh localhost:9092 -t 60
          ./scripts/wait-for-it.sh localhost:2181 -t 60
          ./scripts/wait-for-it.sh localhost:8081 -t 60
      - name: Run integration tests
        run: |
          poetry run -- pytest --integration --local tests/integration/commands/
          # TODO: run all tests, not just command
      - name: Output logs
        if: failure()
        run: |
          docker-compose logs kafka
          docker-compose logs zookeeper
#  publish-to-pypi:
#    name: Publish to pypi
#    needs: [test-style, test-integration]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Install required packages
#        run: |
#          sudo pip3 install pep517
#          python3 -m pep517.build --source --binary --out-dir dist/
#        shell: bash
#      # secrets must be set up on GitHub
#      #- name: Publish esque to PyPI
#      #  uses: pypa/gh-action-pypi-publish@master
#      #  with:
#      #    password: ${{ secrets.pypi_password }}
