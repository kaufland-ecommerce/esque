name: Build, test and package esque
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-style:
    name: Code style check on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.x', '3.6', '3.7', 'pypy3' ]
        os: ['ubuntu-latest']
    steps:
      - uses: actions/checkout@master
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - uses: bulv1ne/python-style-check@master
  test-integration:
    name: Integration test with Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.x', '3.6', '3.7', 'pypy3' ]
      max-parallel: 1
    services:
      zookeeper-kafka:
        image: spotify/kafka
        ports:
          - 2181:2181
          - 9092:9092
        env:
          ZOO_MY_ID: 1
          ZOO_SERVERS: server.1=0.0.0.0:2888:3888
          KAFKA_ADVERTISED_HOST_NAME: localhost
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
          KAFKA_ADVERTISED_PORT: 9092
      schemaregistry:
        image: confluentinc/cp-schema-registry
        ports:
          - 8081:8081
        env:
          SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: none
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "localhost:2181"
          SCHEMA_REGISTRY_HOST_NAME: localhost
          SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    steps:
      - uses: actions/checkout@master
      - name: Verify test environment
        run: |
          bash -c "./scripts/wait-for-it.sh ${ZOOKEEPER_URL} -t 60" ;
          bash -c "./scripts/init.sh" ;
          bash -c "./scripts/wait-for-it.sh ${BROKER_URL} -t 60" ;
          bash -c "./scripts/wait-for-it.sh ${SCHEMA_REGISTRY_URL} -t 60" ;
        env:
          ZOOKEEPER_URL: localhost:2181
          BROKER_URL: localhost:9092
          SCHEMA_REGISTRY_URL: localhost:8081
          CONFIG_PATH: "confluent-community/etc/kafka/server.properties"
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "False"
      - name: Run pytest
        run: |
          sudo apt-get install python3-setuptools python3-pip
          sudo pip3 install .
          sudo pip3 install pytest pytest-cov pytest-mock
          #pytest tests/ --integration --cov=esque --local
          pytest tests/ --cov=esque
  build-deb:
    name: Build and publish Debian package
    needs: [test-style, test-integration]
    runs-on: ubuntu-latest
    steps:
      - name: Clone the current repository
        env:
          PROJECT_GIT_LOCATION: "https://github.com/real-digital/esque"
          SOURCE_CODE_DIR_NAME: "esque"
        shell: bash
        run: |
          rm -f $SOURCE_CODE_DIR_NAME
          git clone $PROJECT_GIT_LOCATION --branch master $SOURCE_CODE_DIR_NAME
      - name: Prepare the library to build the DEB package
        shell: bash
        run: sudo apt-get install python3-setuptools python3-pip python3-stdeb python-stdeb python3-all rpm
      - name: Build the DEB package
        run: |
          cd ./$SOURCE_CODE_DIR_NAME; ./scripts/deb_package_and_build.sh
        shell: bash
        env:
          SOURCE_CODE_DIR_NAME: "esque"
          DEB_STAGING_DIR_NAME: "debian-staging"
      - name: Verify the build (until a package repository is ready, just try and install the package)
        run: |
          cat
          binary_package=`ls ./deb_binary/ | head -1`
          sudo dpkg -i ./deb_binary/${binary_package}
        shell: bash
  build-rpm:
    name: Build and publish RPM package
    needs: [test-style, test-integration]
    runs-on: ubuntu-latest
    steps:
      - name: Clone the current repository
        env:
          PROJECT_GIT_LOCATION: "https://github.com/real-digital/esque"
          SOURCE_CODE_DIR_NAME: "esque"
        shell: bash
        run: |
          rm -f $SOURCE_CODE_DIR_NAME
          git clone $PROJECT_GIT_LOCATION --branch master $SOURCE_CODE_DIR_NAME
      - name: Prepare the library to build the RPM package
        shell: bash
        run: sudo apt-get install python3-setuptools python3-pip python3-stdeb python-stdeb python3-all rpm
      - name: Build the RPM package
        run: cd ./$SOURCE_CODE_DIR_NAME; python3 setup.py bdist_rpm
        shell: bash
        env:
          SOURCE_CODE_DIR_NAME: "esque"
      - name: Verify the build (until a package repository is ready)
        run: ls ${SOURCE_CODE_DIR_NAME}/dist/*.rpm
        shell: bash
        env:
          SOURCE_CODE_DIR_NAME: "esque"
  publish-to-pypi:
    name: Publish to pypi
    needs: [test-style, test-integration]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install required packages
        run: |
          sudo pip3 install pep517
          python3 -m pep517.build --source --binary --out-dir dist/
        shell: bash
      # secrets must be set up on GitHub
      #- name: Publish esque to PyPI
      #  uses: pypa/gh-action-pypi-publish@master
      #  with:
      #    password: ${{ secrets.pypi_password }}
