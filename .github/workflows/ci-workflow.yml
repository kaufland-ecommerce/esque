name: Build, test and package esque
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-style:
    name: Code style check on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.x', '3.6', '3.7', 'pypy3' ]
        os: ['ubuntu-latest']
    steps:
      - uses: actions/checkout@v1
        with:
          ref: master
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - uses: bulv1ne/python-style-check@master
  test-integration:
    env:
      ZOOKEEPER_URL: localhost:2181
      KAFKA_URL: localhost:9092
      SCHEMA_REGISTRY_URL: localhost:8081
      SERVICES_ROOT: /services
    name: Integration test with Python ${{ matrix.python }} on Kafka ${{ matrix.kafka }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.x', '3.6', '3.7', 'pypy3' ]
        kafka: ['2_3_1', '2_1_1']
      max-parallel: 1
    steps:
      - uses: actions/cache@v1
        id: confluent
        with:
          path: confluent
          key: confluent
      - uses: actions/cache@v1
        id: kafka-2_3_1
        with:
          path: ${SERVICES_ROOT}/kafka-2_3_1
          key: kafka-2_3_1
      - uses: actions/cache@v1
        id: kafka-1_1_1
        with:
          path: ${SERVICES_ROOT}/kafka-1_1_1
          key: kafka-1_1_1
      - name: Install Java
        run: sudo apt-get install openjdk-8-jdk
      - uses: actions/checkout@v1
        with:
          ref: master
      - name: Download Confluent packages
        if: steps.confluent.outputs.cache-hit != 'true'
        run: |
          sudo mkdir -p ${SERVICES_ROOT}
          sudo chown -R $USER ${SERVICES_ROOT}
          wget http://packages.confluent.io/archive/5.2/confluent-community-5.2.1-2.12.tar.gz -O ${SERVICES_ROOT}/confluent.tgz
          mkdir -p ${SERVICES_ROOT}/confluent
          tar xzf ${SERVICES_ROOT}/confluent.tgz -C ${SERVICES_ROOT}/confluent --strip-components 1
      - name: Download Kafka ${{ matrix.kafka }}
        if: steps.kafka-2_3_1.outputs.cache-hit != 'true'
        run: |
          dotted_version=`echo ${{ matrix.kafka }} | sed 's/_/./g'`
          wget http://mirror.netcologne.de/apache.org/kafka/${dotted_version}/kafka_2.12-${dotted_version}.tgz -O ${SERVICES_ROOT}/kafka-${dotted_version}.tgz
          mkdir -p ${SERVICES_ROOT}/kafka-${{ matrix.kafka }}
          tar xzf ${SERVICES_ROOT}/kafka-${dotted_version}.tgz -C ${SERVICES_ROOT}/kafka-${{ matrix.kafka }} --strip-components 1
      - name: Start services
        run: |
          ${SERVICES_ROOT}/confluent/bin/zookeeper-server-start -daemon ${SERVICES_ROOT}/confluent/etc/kafka/zookeeper.properties
          bash -c "./scripts/wait-for-it.sh ${ZOOKEEPER_URL} -t 60"
          ${SERVICES_ROOT}/kafka-${{ matrix.kafka }}/bin/kafka-server-start -daemon ${SERVICES_ROOT}/kafka-${{ matrix.kafka }}/config/server.properties
          bash -c "./scripts/wait-for-it.sh ${KAFKA_URL} -t 60"
          sudo ${SERVICES_ROOT}/confluent/bin/schema-registry-start -daemon ${SERVICES_ROOT}/confluent/etc/schema-registry/schema-registry.properties
          bash -c "./scripts/wait-for-it.sh ${SCHEMA_REGISTRY_URL} -t 60" ;
      - name: Install system packages
        run: sudo apt-get install -y python3-setuptools python3-virtualenv python3-pip virtualenv python3-venv
      - name: Install and configure poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python3
          export PATH=$PATH:$HOME/.poetry/bin
          source $HOME/.poetry/env
          virtualenv venv --python=python3
          $HOME/.poetry/bin/poetry self:update --preview
      - name: Install esque requirements
        run: |
          source ./venv/bin/activate
          $HOME/.poetry/bin/poetry install -vvv
      - name: Setup default esque configuration
        run: |
          mkdir -p ~/.esque
          source ./venv/bin/activate
          cp ./esque/config/sample_config.yaml ~/.esque/esque.yaml
      - name: Run unit tests
        run: |
          source ./venv/bin/activate
          $HOME/.poetry/bin/poetry run pytest tests/unit/
      - name: Run integration tests
        run: |
          sudo netstat -punta
          source ./venv/bin/activate
          esque ctx local
          $HOME/.poetry/bin/poetry run pytest -s -v --integration --local tests/integration/commands/test_ping.py
      - name: Stop all services
        run: |
          confluent/bin/schema-registry-stop
          kafka-${{ matrix.kafka }}/bin/kafka-server-stop.sh
          confluent/bin/zookeeper-server-stop
#  publish-to-pypi:
#    name: Publish to pypi
#    needs: [test-style, test-integration]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Install required packages
#        run: |
#          sudo pip3 install pep517
#          python3 -m pep517.build --source --binary --out-dir dist/
#        shell: bash
#      # secrets must be set up on GitHub
#      #- name: Publish esque to PyPI
#      #  uses: pypa/gh-action-pypi-publish@master
#      #  with:
#      #    password: ${{ secrets.pypi_password }}
