config:
  cleanup.policy: enum('', 'compact', 'delete', 'compact,delete', 'delete,compact', required=False)
  compression.type: enum('uncompressed', 'zstd', 'lz4', 'snappy', 'gzip', 'producer', required=False)
  delete.retention.ms: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  file.delete.delay.ms: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  flush.messages: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  flush.ms: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  follower.replication.throttled.replicas: regex(r'^(|\*|(\d+:\d+,)*\d+:\d+)$', name='list of colon seperated ints', required=False)
  index.interval.bytes: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  leader.replication.throttled.replicas: regex(r'^(|\*|(\d+:\d+,)*\d+:\d+)$', name='list of colon seperated ints', required=False)
  max.compaction.lag.ms: regex(r'^[1-9]\d*$', name='int >= 1', required=False)
  max.message.bytes: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  message.downconversion.enable: regex(r'^(true|false)$', name='boolean', ignore_case=True, required=False)
  message.format.version: enum(
    '0.8.0',
    '0.8.1',
    '0.8.2',
    '0.9.0',
    '0.10.0-IV0',
    '0.10.0-IV1',
    '0.10.1-IV0',
    '0.10.1-IV1',
    '0.10.1-IV2',
    '0.10.2-IV0',
    '0.11.0-IV0',
    '0.11.0-IV1',
    '0.11.0-IV2',
    '1.0-IV0',
    '1.1-IV0',
    '2.0-IV0',
    '2.0-IV1',
    '2.1-IV0',
    '2.1-IV1',
    '2.1-IV2',
    '2.2-IV0',
    '2.2-IV1',
    '2.3-IV0',
    '2.3-IV1',
    required=False)
  message.timestamp.difference.max.ms: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  message.timestamp.type: enum('CreateTime', 'LogAppendTime', required=False)
  min.cleanable.dirty.ratio: regex(r'^(0|0\.\d*|1\.?0*)$', name='float 0-1', required=False)
  min.compaction.lag.ms: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  min.insync.replicas: regex(r'^[1-9]\d*$', name='int >= 1', required=False)
  preallocate: regex(r'^(true|false)$', name='boolean', ignore_case=True, required=False)
  retention.bytes: regex(r'^(-1|0|[1-9]\d*)$', name='int >= -1', required=False)
  retention.ms: regex(r'^(-1|0|[1-9]\d*)$', name='int >= -1', required=False)
  segment.bytes: regex(r'^(1[5-9]|[2-9]\d|[1-9]\d{2,})$', name='int >= 14', required=False)
  segment.index.bytes: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  segment.jitter.ms: regex(r'^(0|[1-9]\d*)$', name='int >= 0', required=False)
  segment.ms: regex(r'^[1-9]\d*$', name='int >= 1', required=False)
  unclean.leader.election.enable: regex(r'^(true|false)$', name='boolean', ignore_case=True, required=False)
