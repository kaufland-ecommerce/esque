# FIXME autogenerated module, check for errors!
from dataclasses import dataclass
from typing import Dict, Tuple, List, Optional

from esque.protocol.api.base import *
from esque.protocol.serializers import *


@dataclass
class SaslHandshakeRequestData(RequestData):
    # The SASL mechanism chosen by the client.
    mechanism: "str"  # STRING

    @staticmethod
    def api_key() -> int:
        return ApiKey.SASL_HANDSHAKE  # == 17


@dataclass
class SaslHandshakeResponseData(ResponseData):
    # The error code, or 0 if there was no error.
    error_code: "int"  # INT16

    # The mechanisms enabled in the server.
    mechanisms: List["str"]  # STRING

    @staticmethod
    def api_key() -> int:
        return ApiKey.SASL_HANDSHAKE  # == 17


saslHandshakeRequestDataSchemas: Dict[int, Schema] = {
    0: [("mechanism", stringSerializer)],
    1: [("mechanism", stringSerializer)],
}


saslHandshakeRequestDataSerializers: Dict[int, BaseSerializer[SaslHandshakeRequestData]] = {
    version: NamedTupleSerializer(SaslHandshakeRequestData, schema)
    for version, schema in saslHandshakeRequestDataSchemas.items()
}


saslHandshakeResponseDataSchemas: Dict[int, Schema] = {
    0: [("error_code", int16Serializer), ("mechanisms", ArraySerializer(stringSerializer))],
    1: [("error_code", int16Serializer), ("mechanisms", ArraySerializer(stringSerializer))],
}


saslHandshakeResponseDataSerializers: Dict[int, BaseSerializer[SaslHandshakeResponseData]] = {
    version: NamedTupleSerializer(SaslHandshakeResponseData, schema)
    for version, schema in saslHandshakeResponseDataSchemas.items()
}
