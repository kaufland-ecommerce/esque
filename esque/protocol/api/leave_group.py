# FIXME autogenerated module, check for errors!
from typing import Dict

from dataclasses import dataclass

from esque.protocol.api.base import ApiKey, RequestData, ResponseData
from esque.protocol.serializers import (
    BaseSerializer,
    DummySerializer,
    NamedTupleSerializer,
    Schema,
    int16Serializer,
    int32Serializer,
    stringSerializer,
)


@dataclass
class LeaveGroupRequestData(RequestData):
    # The ID of the group to leave.
    group_id: "str"  # STRING

    # The member ID to remove from the group.
    member_id: "str"  # STRING

    @staticmethod
    def api_key() -> int:
        return ApiKey.LEAVE_GROUP  # == 13


@dataclass
class LeaveGroupResponseData(ResponseData):
    # The duration in milliseconds for which the request was throttled due to a quota violation, or zero
    # if the request did not violate any quota.
    throttle_time_ms: "int"  # INT32

    # The error code, or 0 if there was no error.
    error_code: "int"  # INT16

    @staticmethod
    def api_key() -> int:
        return ApiKey.LEAVE_GROUP  # == 13


leaveGroupRequestDataSchemas: Dict[int, Schema] = {
    0: [("group_id", stringSerializer), ("member_id", stringSerializer)],
    1: [("group_id", stringSerializer), ("member_id", stringSerializer)],
    2: [("group_id", stringSerializer), ("member_id", stringSerializer)],
}


leaveGroupRequestDataSerializers: Dict[int, BaseSerializer[LeaveGroupRequestData]] = {
    version: NamedTupleSerializer(LeaveGroupRequestData, schema)
    for version, schema in leaveGroupRequestDataSchemas.items()
}


leaveGroupResponseDataSchemas: Dict[int, Schema] = {
    0: [("error_code", int16Serializer), ("throttle_time_ms", DummySerializer(int()))],
    1: [("throttle_time_ms", int32Serializer), ("error_code", int16Serializer)],
    2: [("throttle_time_ms", int32Serializer), ("error_code", int16Serializer)],
}


leaveGroupResponseDataSerializers: Dict[int, BaseSerializer[LeaveGroupResponseData]] = {
    version: NamedTupleSerializer(LeaveGroupResponseData, schema)
    for version, schema in leaveGroupResponseDataSchemas.items()
}
