# FIXME autogenerated module, check for errors!
from dataclasses import dataclass
from typing import Dict, Tuple, List, Optional

from esque.protocol.api.base import *
from esque.protocol.serializers import *


@dataclass
class SaslAuthenticateRequestData(RequestData):
    # The SASL authentication bytes from the client, as defined by the SASL mechanism.
    auth_bytes: "bytes"  # BYTES

    @staticmethod
    def api_key() -> int:
        return ApiKey.SASL_AUTHENTICATE  # == 36


@dataclass
class SaslAuthenticateResponseData(ResponseData):
    # The error code, or 0 if there was no error.
    error_code: "int"  # INT16

    # The error message, or null if there was no error.
    error_message: "Optional[str]"  # NULLABLE_STRING

    # The SASL authentication bytes from the server, as defined by the SASL mechanism.
    auth_bytes: "bytes"  # BYTES

    # The SASL authentication bytes from the server, as defined by the SASL mechanism.
    session_lifetime_ms: "int"  # INT64

    @staticmethod
    def api_key() -> int:
        return ApiKey.SASL_AUTHENTICATE  # == 36


saslAuthenticateRequestDataSchemas: Dict[int, Schema] = {
    0: [("auth_bytes", bytesSerializer)],
    1: [("auth_bytes", bytesSerializer)],
}


saslAuthenticateRequestDataSerializers: Dict[int, BaseSerializer[SaslAuthenticateRequestData]] = {
    version: NamedTupleSerializer(SaslAuthenticateRequestData, schema)
    for version, schema in saslAuthenticateRequestDataSchemas.items()
}


saslAuthenticateResponseDataSchemas: Dict[int, Schema] = {
    0: [
        ("error_code", int16Serializer),
        ("error_message", nullableStringSerializer),
        ("auth_bytes", bytesSerializer),
        ("session_lifetime_ms", DummySerializer(int())),
    ],
    1: [
        ("error_code", int16Serializer),
        ("error_message", nullableStringSerializer),
        ("auth_bytes", bytesSerializer),
        ("session_lifetime_ms", int64Serializer),
    ],
}


saslAuthenticateResponseDataSerializers: Dict[int, BaseSerializer[SaslAuthenticateResponseData]] = {
    version: NamedTupleSerializer(SaslAuthenticateResponseData, schema)
    for version, schema in saslAuthenticateResponseDataSchemas.items()
}
